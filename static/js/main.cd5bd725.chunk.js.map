{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","LOCAL_STORAGE_KEY","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","className","newTodos","find","ref","onClick","e","current","value","prevTodos","uuidv4","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAEe,SAASA,EAAT,GAAsC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAIlC,OACI,8BACI,kCACI,uBAAOC,KAAK,WAAWC,QAASH,EAAKI,SAAUC,SAN3D,WACIJ,EAAWD,EAAKM,OAMPN,EAAKO,UCPP,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WACtC,OACIQ,EAAMC,KAAI,SAAAV,GACN,OAAO,cAACD,EAAD,CAAoBE,WAAYA,EAAYD,KAAMA,GAAvCA,EAAKM,O,YCD7BK,G,MAAoB,iBA+CXC,MA7Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcK,EAAd,KACMC,EAAcC,mBA+BpB,OA7BAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GAAaJ,EAASI,KACzB,IAEHD,qBAAU,WACRI,aAAaE,QAAQZ,EAAmBQ,KAAKK,UAAUf,MACtD,CAACA,IAuBF,sBAAKgB,UAAU,YAAf,UACE,cAAEjB,EAAF,CAAWC,MAAOA,EAAOR,WAtB7B,SAAoBK,GAClB,IAAMoB,EAAQ,YAAOjB,GACfT,EAAO0B,EAASC,MAAK,SAAA3B,GAAI,OAAIA,EAAKM,KAAOA,KAC/CN,EAAKI,UAAYJ,EAAKI,SACtBU,EAASY,MAmBP,uBAAQE,IAAKb,EAAab,KAAK,OAAOI,GAAG,eACzC,wBAAQuB,QAjBZ,SAAuBC,GACrB,IAAMvB,EAAOQ,EAAYgB,QAAQC,MACpB,KAATzB,IACJO,GAAS,SAAAmB,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAE3B,GAAI4B,cAAU3B,KAAMA,EAAMH,UAAU,QAE9DW,EAAYgB,QAAQC,MAAQ,OAWM1B,GAAG,UAAnC,sBACA,wBAAQuB,QATZ,WACE,IAAMH,EAAWjB,EAAM0B,QAAO,SAAAnC,GAAI,OAAKA,EAAKI,YAC5CU,EAASY,IAO4BpB,GAAG,QAAtC,4BACA,gCAAMG,EAAM0B,QAAO,SAAAnC,GAAI,OAAKA,EAAKI,YAAUgC,OAA3C,qBCzCNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cd5bd725.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Todo( { todo, toggleTodo }) {\r\n    function handleTodoClick() {\r\n        toggleTodo(todo.id)\r\n    }\r\n    return (\r\n        <div>\r\n            <label>\r\n                <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoClick}/>\r\n                {todo.name}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n    return (\r\n        todos.map(todo => {\r\n            return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />\r\n        })\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\nimport TodoList from \"./TodoList\";\nimport {v4 as uuidv4} from 'uuid';\nimport \"./App.css\";\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTodos) setTodos(storedTodos)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === '') return\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false}]\n    })\n    todoNameRef.current.value = null\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n  return (\n    <div className='container'>\n      < TodoList todos={todos} toggleTodo={toggleTodo}/>\n      < input ref={todoNameRef} type=\"text\" id='inputField'/>\n      <button onClick={handleAddTodo} id='addToDo'>Add Todo</button>\n      <button onClick={handleClearTodos} id='clear'>Clear Complete</button>\n      <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n    </div>\n    \n  )\n}\n\nexport default App;\n\n\n// const [todos, setTodos] = useState([{ id: 1, name: 'Todo 1', complete: false}])\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}